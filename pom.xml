<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.9.RELEASE</version>
	</parent>

	<groupId>com.example</groupId>
	<artifactId>demoapp</artifactId>
	<version>0.0.2-SNAPSHOT</version>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<docker.image.base>java</docker.image.base>

		<checkstyle.failOnViolation>false</checkstyle.failOnViolation>
		<checkstyle.failsOnError>false</checkstyle.failsOnError>
		<coverage.minLineRatio>0.00</coverage.minLineRatio>
		<coverage.minBranchRatio>0.00</coverage.minBranchRatio>

		<docker-maven-plugin.version>1.2.0</docker-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
		<maven-jacoco-plugin.version>0.8.4</maven-jacoco-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<verbose>false</verbose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<imageName>demoapp</imageName>
					<baseImage>${docker.image.base}</baseImage>
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven-jacoco-plugin.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.minLineRatio}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.minBranchRatio}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.4.10</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<configuration>
					<failOnViolation>${checkstyle.failOnViolation}</failOnViolation>
					<failsOnError>${checkstyle.failsOnError}</failsOnError>
					<linkXRef>false</linkXRef>
					<logViolationsToConsole>true</logViolationsToConsole>
					<consoleOutput>true</consoleOutput>
					<checkstyleRules>
						<module name="Checker">
							<property name="fileExtensions" value="java, properties, xml"/>
							<module name="NewlineAtEndOfFile"/>
							<module name="FileLength"/>
							<module name="TreeWalker">
								<module name="LocalFinalVariableName"/>
								<module name="LocalVariableName"/>
								<module name="MemberName"/>
								<module name="MethodName"/>
								<module name="PackageName"/>
								<module name="ParameterName"/>
								<module name="StaticVariableName"/>
								<module name="TypeName"/>
								<module name="AvoidStarImport"/>
								<module name="IllegalImport"/> <!-- defaults to sun.* packages -->
								<module name="RedundantImport"/>
								<module name="UnusedImports">
									<property name="processJavadoc" value="true"/>
								</module>
								<module name="MethodLength"/>
								<module name="NoWhitespaceAfter"/>
								<module name="NoWhitespaceBefore"/>
								<module name="WhitespaceAfter"/>
								<module name="WhitespaceAround"/>
								<module name="ModifierOrder"/>
								<module name="RedundantModifier"/>
								<module name="EmptyBlock"/>
								<module name="EmptyStatement"/>
								<module name="MissingSwitchDefault"/>
							</module>
						</module>
					</checkstyleRules>
					<excludes>**/model/**</excludes>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle-analyze</id>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jdepend-maven-plugin</artifactId>
        <version>2.0</version>
      </plugin>
    </plugins>
  </reporting>
</project>
